#############  Trigger part ###################

on early-init

    mkdir /tmp 0771 root system
    mount tmpfs tmpfs /tmp mode=0755,gid=1000   
    #mkdir /tmp/mnt 0775 root system
    #symlink /tmp/mnt /mnt
# create mountpoints
    mkdir /mnt 0775 root system
    mount tmpfs tmpfs /mnt mode=0755,gid=1000
    
    write /proc/sys/kernel/randomize_va_space 2
    write /proc/boottime ir-mtk:early-init-done

on init

### valgrind (from init.rc) ###
	export VALGRIND_LIB /system/lib/valgrind
	
### vold: file system table ###
    symlink /system/etc/fstab.mt5399 /fstab.mt5399
    symlink /system/etc/fstab.mt5880 /fstab.mt5880
	symlink /system/etc/fstab.mt5890 /fstab.mt5890
	symlink /system/etc/fstab.mt5882 /fstab.mt5882
	symlink /system/etc/fstab.mt5861 /fstab.mt5861

### sdcard: sd card usage (from init.rc) ###
    mkdir /mnt/shell/emulated 0700 shell shell

    #export EXTERNAL_STORAGE /storage/emulated/legacy
    export EXTERNAL_STORAGE /storage/sdcard
    #export EMULATED_STORAGE_SOURCE /mnt/shell/emulated
    #export EMULATED_STORAGE_SOURCE /mnt/media_rw/sdcard
    #export EMULATED_STORAGE_TARGET /storage/emulated
    #export EMULATED_STORAGE_TARGET /storage/sdcard

    # Support legacy paths
    #symlink /storage/emulated/legacy /sdcard
    #symlink /storage/emulated/legacy /mnt/sdcard
    #symlink /storage/emulated/legacy /storage/sdcard0
    #symlink /mnt/shell/emulated/0 /storage/emulated/legacy
    symlink /storage/sdcard /sdcard
    symlink /storage/sdcard /usbdisk
    symlink /storage/sdcard /mnt/sdcard
    symlink /storage/sdcard /mnt/usbdisk
### sdcard: end

on post-fs
#  post-fs > post-fs-data

### device_node: device node creation
    #mknod_util can handle if the device nodes text doesn't exist, so here we 
    #just make both Android & Linux world device node, 
    
    exec /system/bin/mknod_util /system/etc/dev.txt /system/etc/dev_linux.txt

on post-fs-data

### widevine ###
    # create for widevine
    mkdir /data/widevine 0777 system system

    # symlink for GTS widevine L1 , L3 platfrom should not be exist
    #symlink /system/lib/libmtal.so /vendor/lib/liboemcrypto.so

### wifi: config ###
    chmod 0777 /data/misc/wifi/wpa_supplicant.conf
    chmod 0777 /system/etc/wifi/wpa_supplicant.conf    

### suspend_to_dram ### 
    chown radio system /sys/power/suspend
    chmod 0660 /sys/power/suspend
    chmod 0660 /sys/power/wakeup_count
    write /sys/power/wake_lock INIT_SCR

### surfaceflinger: remove surfaceflinger from system_server ###
# Set this property to 0 so surfaceflinger is not started by system_init
    setprop system_init.startsurfaceflinger 0
### surfaceflinger: end


	# This property trigger has added to imitiate the previous behavior of "adb root".
# The adb gadget driver used to reset the USB bus when the adbd daemon exited,
# and the host side adb relied on this behavior to force it to reconnect with the
# new adbd instance after init relaunches it. So now we force the USB bus to reset
# here when adbd sets the service.adb.root property to 1.  We also restart adbd here
# rather than waiting for init to notice its death and restarting it so the timing
# of USB resetting and adb restarting more closely matches the previous behavior.
on property:service.adb.root=1
    write /sys/class/android_usb/android0/enable 0
    restart adbd
    write /sys/class/android_usb/android0/enable 1

### run console
# mtk: temparily move this to let console service run quickly
# on property:ro.mtk.console_support=1
#     start console

############## Service parts ################
# bootup: start: to check bootup process
service bt_chk /sbin/sh /bt_chk.sh
    class main
    console
    oneshot

