# ==============================================
# Type Declaration
# ==============================================

type vold, domain;
type vold_exec, exec_type, file_type;

# ==============================================
# Android Policy Rule
# ==============================================

# volume manager

init_daemon_domain(vold)

typeattribute vold mlstrustedsubject;
allow vold system_file:file x_file_perms;
allow vold block_device:dir create_dir_perms;
allow vold block_device:blk_file create_file_perms;
allow vold device:dir write;
allow vold devpts:chr_file rw_file_perms;
allow vold rootfs:dir mounton;
allow vold sdcard_type:dir mounton;
allow vold sdcard_type:filesystem { mount remount unmount };
allow vold sdcard_type:dir create_dir_perms;
allow vold sdcard_type:file create_file_perms;
allow vold tmpfs:filesystem { mount unmount };
allow vold tmpfs:dir create_dir_perms;
allow vold tmpfs:dir mounton;
allow vold self:capability { net_admin dac_override mknod sys_admin chown fowner fsetid sys_module};
allow vold self:netlink_kobject_uevent_socket *;
allow vold app_data_file:dir search;
allow vold app_data_file:file rw_file_perms;
allow vold loop_device:blk_file rw_file_perms;
allow vold dm_device:chr_file rw_file_perms;
# For vold Process::killProcessesWithOpenFiles function.
allow vold domain:dir r_dir_perms;
allow vold domain:{ file lnk_file } r_file_perms;
allow vold domain:process { signal sigkill };
allow vold self:capability { sys_ptrace kill };

# For blkid
allow vold shell_exec:file rx_file_perms;

# XXX Label sysfs files with a specific type?
allow vold sysfs:file rw_file_perms;

write_klog(vold)

#
# Rules to support encrypted fs support.
#

# Set property.
unix_socket_connect(vold, property, init)

# Unmount and mount the fs.
allow vold labeledfs:filesystem { mount unmount remount };

# Access /efs/userdata_footer.
# XXX Split into a separate type?
allow vold efs_file:file rw_file_perms;

# Create and mount on /data/tmp_mnt.
allow vold system_data_file:dir { create rw_dir_perms mounton };
allow vold system_data_file:file create_file_perms;

# Set scheduling policy of kernel processes
allow vold kernel:process setsched;

# Property Service
allow vold vold_prop:property_service set;
allow vold powerctl_prop:property_service set;
allow vold ctl_default_prop:property_service set;

# ASEC
allow vold asec_image_file:file create_file_perms;
allow vold asec_image_file:dir rw_dir_perms;
security_access_policy(vold)
allow vold asec_apk_file:dir { rw_dir_perms setattr };
allow vold asec_apk_file:file { r_file_perms setattr };


# ==============================================
# NSA Policy Rule
# ==============================================

# volume manager

# init_daemon_domain(vold)

typeattribute vold mlstrustedsubject;
allow vold system_file:file x_file_perms;
allow vold block_device:dir create_dir_perms;
allow vold block_device:blk_file create_file_perms;
allow vold device:dir write;
allow vold devpts:chr_file rw_file_perms;
allow vold rootfs:dir mounton;
allow vold sdcard_type:dir mounton;
allow vold sdcard_type:filesystem { mount remount unmount };
allow vold sdcard_type:dir create_dir_perms;
allow vold tmpfs:filesystem { mount unmount };
allow vold tmpfs:dir create_dir_perms;
allow vold tmpfs:dir mounton;
allow vold self:capability { net_admin dac_override mknod sys_admin chown fowner fsetid };
allow vold self:netlink_kobject_uevent_socket *;
allow vold app_data_file:dir search;
allow vold app_data_file:file rw_file_perms;
allow vold loop_device:blk_file rw_file_perms;
allow vold dm_device:chr_file rw_file_perms;
# For vold Process::killProcessesWithOpenFiles function.
allow vold domain:dir r_dir_perms;
allow vold domain:{ file lnk_file } r_file_perms;
allow vold domain:process { signal sigkill };
allow vold self:capability { sys_ptrace };

# XXX Label sysfs files with a specific type?
allow vold sysfs:file rw_file_perms;

# write_klog(vold)

#
# Rules to support encrypted fs support.
#

# Set property.
unix_socket_connect(vold, property, init)

# Unmount and mount the fs.
allow vold labeledfs:filesystem { mount unmount remount };

# Access /efs/userdata_footer.
# XXX Split into a separate type?
allow vold efs_file:file rw_file_perms;

# Create and mount on /data/tmp_mnt.
allow vold system_data_file:dir { create rw_dir_perms mounton };

# Set scheduling policy of kernel processes
allow vold kernel:process setsched;

# Property Service
allow vold vold_prop:property_service set;
allow vold powerctl_prop:property_service set;

# ASEC
allow vold asec_image_file:file create_file_perms;
allow vold asec_image_file:dir rw_dir_perms;
security_access_policy(vold)
allow vold asec_apk_file:dir { rw_dir_perms setattr };
allow vold asec_apk_file:file { r_file_perms setattr };


# ==============================================
# MTK Policy Rule
# ==============================================

# permissive vold;

# 20131024 CTS_02
allow vold device:chr_file { read ioctl open write };
# allow vold fsck_msdos_exec:file { read execute open execute_no_trans };
# allow vold linker_exec:file { read execute open };


# 20131028 CTS_16
allow vold system_data_file:file open;

# 20131028 CTS_22
allow vold proc:file write;

# 20131119 FeatureSQC
#allow vold ccci_device:chr_file { read write };
allow vold kernel:system module_request;
#allow vold make_ext4fs_exec:file { read execute open execute_no_trans };
#allow vold misc_sd_device:chr_file { read ioctl open };
#allow vold muxreport_exec:file { read execute };
allow vold proc:file write;
allow vold sdcard_external:file { rename write getattr read create unlink open };
#allow vold toolbox_exec:file { read execute open execute_no_trans };
#allow vold toolbox_exec:file getattr;


# 20131119 Sanity_QA
allow vold device:chr_file { read ioctl open };


# 20131122 Add Set Property Rule
allow vold property_type:property_service set;

# OMADM_USB
allow vold system_data_file:file { create write setattr };
allow vold system_data_file:dir setattr;


# unlink ext_sdcard_tool
allow vold system_data_file:lnk_file unlink;

# wake_lock
# allow vold sysfs_wake_lock:file { open read write };

# muxreport
#allow vold muxreport_exec:file { open execute_no_trans };
#allow vold aee_aed:unix_stream_socket connectto;
#allow vold ccci_device:chr_file { ioctl open };
#allow vold aee_aed:process sigchld;

#ALPS01285423 encrypt phone
allow vold device:file create;

# 20131213 KKMR1_CQ_CTS_02
allow vold device:file { write getattr open };

# extmem policy
# allow vold exm0_device:chr_file { read write ioctl open }; 

# e2fsck for encryption
allow vold rootfs:file execute;
allow vold rootfs:file execute_no_trans;


# ==== MTK DTV Policy ====
allow vold rootfs:dir { add_name remove_name rmdir mounton getattr create read write unlink };
allow vold rootfs:filesystem { associate };
allow vold rootfs:file { mounton getattr create read write unlink};
 
allow vold device:dir { add_name remove_name rmdir open mounton getattr create read write };
allow vold graphics_device:dir { getattr read open };
allow vold audio_device:dir { getattr read open };
allow vold input_device:dir { getattr read open };
allow vold log_device:dir { getattr read open };
allow vold socket_device:dir { getattr read open };
allow vold devpts:dir { read open };
allow vold system_file:dir { add_name remove_name write };
allow vold system_file:file { write create setattr link unlink rename };
allow vold vold_tmpfs:file { read write create open getattr unlink };

allow vold fuse_device:chr_file { getattr }; 
allow vold self:capability { net_admin dac_override mknod sys_admin chown fowner fsetid setuid setgid};

#### ntsf-3g formatted U disk ###
#<5>type=1400 audit(1395737454.260:6): avc: denied { read write } for pid=4406 comm="ntfs-3g" name="fuse" dev="tmpfs" ino=2410 scontext=u:r:vold:s0 tcontext=u:object_r:fuse_device:s0 tclass=chr_file
allow vold fuse_device:chr_file { read write create open getattr unlink };

#type=1400 audit(1395753728.336:6): avc:  denied  { mount } for  pid=2765 comm="ntfs-3g" name="/" dev="sda5" ino=1 scontext=u:r:vold:s0 tcontext=u:object_r:unlabeled:s0 tclass=filesystem
#type=1400 audit(1395754200.056:6): avc:  denied  { getattr } for  pid=961 comm="vold" name="/" dev="sda5" ino=1 scontext=u:r:vold:s0 tcontext=u:object_r:unlabeled:s0 tclass=filesystem
#type=1400 audit(1395754200.721:8): avc:  denied  { unmount } for  pid=1253 comm="vold" scontext=u:r:vold:s0 tcontext=u:object_r:unlabeled:s0 tclass=filesystem
allow vold unlabeled:filesystem { getattr mount unmount};

# !!NOTES: this'd better be put in unlabeled related handling
#type=1400 audit(1395754673.788:6): avc:  denied  { associate } for  pid=1273 comm="vold" name=".android_secure" scontext=u:object_r:unlabeled:s0 tcontext=u:object_r:unlabeled:s0 tclass=filesystem
allow unlabeled unlabeled:filesystem { associate };

### block-mode file ###
#<5>type=1400 audit(1395820138.428:63): avc:  denied  { getattr } for  pid=3452 comm="blkid" path="/dev/mapper/dm-4" dev="tmpfs" ino=1346 scontext=u:r:vold:s0 tcontext=u:object_r:device:s0 tclass=blk_file
#type=1400 audit(1395821200.715:7): avc:  denied  { read } for  pid=2829 comm="blkid" name="dm-5" dev="tmpfs" ino=1315 scontext=u:r:vold:s0 tcontext=u:object_r:device:s0 tclass=blk_file
#type=1400 audit(1395821588.084:7): avc:  denied  { open } for  pid=2830 comm="blkid" path="/dev/mapper/dm-5" dev="tmpfs" ino=362 scontext=u:r:vold:s0 tcontext=u:object_r:device:s0 tclass=blk_file
allow vold device:blk_file { getattr ioctl open read };


# ==== MTK DTV Policy: end ====

